apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "secure-tenancy.fullname" . }}-migrate
  labels:
    {{- include "secure-tenancy.labels" . | nindent 4 }}
  annotations:
    {{- if not .Values.omitHelm }}
    {{- if .Values.mysql.enabled }}
    "helm.sh/hook": post-install
    {{- else }}
    "helm.sh/hook": pre-install
    {{- end }}
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- end }}
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 200
  template:
    metadata:
      labels:
        {{- include "secure-tenancy.selectorLabels" . | nindent 8 }}
    spec:  
      restartPolicy: OnFailure   
      containers:
        - name: migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/srv/hny/bin/migrate"]
          args: 
              - "-url"
              - "mysql://$(HONEYCOMB_MYSQL_USER):$(HONEYCOMB_MYSQL_PASSWORD)@tcp({{ include "db.fullhost" . }})/{{ .Values.mysql.db.name }}?timeout=30s&tls={{ .Values.mysql.tls }}"
              - "-path"
              - "/srv/hny/migrate"
              - "up"
          env:
            - name: HONEYCOMB_MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "secure-tenancy.fullname" . }}-migrate
                  key: mysql-user
            - name: HONEYCOMB_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "secure-tenancy.fullname" . }}-migrate
                  key: mysql-password
