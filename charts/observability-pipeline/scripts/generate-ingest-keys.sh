#!/bin/sh

set -e

BEARER_TOKEN=$MANAGEMENT_API_KEY_ID:$MANAGEMENT_API_KEY

TEAM_SLUG=$(curl -s -X GET \
  https://api.honeycomb.io/2/auth \
  -H 'Authorization: Bearer '$BEARER_TOKEN'' | jq -r ".included[0].attributes.slug")

echo Team slug $TEAM_SLUG

base_url="https://api.honeycomb.io/2/teams/$TEAM_SLUG"

echo "Fetching environments ..."
ENVIRONMENTS=$(curl -s -X GET $base_url'/environments?page%5bsize%5D=100' -H 'Authorization: Bearer '$BEARER_TOKEN'')

echo "getting the environment ids for \"pipeline-telemetry\" and \"$TELEMETRY_ENVIRONMENT_NAME\""
# find the environment id for the environment named ""
INTERNAL_TELEMETRY_ENVIRONMENT_ID=$(echo $ENVIRONMENTS | jq -r '.data[] | select(.attributes.name == "pipeline-telemetry") | .id')
CUSTOMER_TELEMETRY_ENVIRONMENT_ID=$(echo $ENVIRONMENTS | jq -r '.data[] | select(.attributes.name == "'$TELEMETRY_ENVIRONMENT_NAME'") | .id')

echo "INTERNAL_TELEMETRY_ENVIRONMENT_ID: $INTERNAL_TELEMETRY_ENVIRONMENT_ID"
echo "CUSTOMER_TELEMETRY_ENVIRONMENT_ID: $CUSTOMER_TELEMETRY_ENVIRONMENT_ID"

# if internal telemetry environment it's not there, create it
if [ -z "$INTERNAL_TELEMETRY_ENVIRONMENT_ID" ]; then
  echo "Creating internal telemetry environment as it doesn't exist"
  INTERNAL_TELEMETRY_ENVIRONMENT_ID=$(curl -s -X POST \
    $base_url'/environments' \
    -H 'Authorization: Bearer '$BEARER_TOKEN'' \
    -H 'Content-Type: application/vnd.api+json' \
    -d '{
      "data": {
        "type": "environments",
        "attributes": {
          "name": "pipeline-telemetry",
          "description": "Environment for internal telemetry",
          "color": "blue"
        }
      }
    }' | jq -r '.data.id')
fi


create_api_key() {
  local environment_id=$1
    #datetime without formatting
  CURRENT_DATE_TIME=$(date +%Y%m%d%H%M%S)
  
  # API_KEY is the .data.id field concatenated with .data.attributes.secret
  API_KEY=$(curl -s -X POST \
    https://api.honeycomb.io/2/teams/$TEAM_SLUG/api-keys \
    -H 'Authorization: Bearer '$BEARER_TOKEN'' \
    -H 'Content-Type: application/vnd.api+json' \
    -d '{
      "data": {
        "type": "api-keys",
        "attributes": {
          "name": "autogenerated-by-observability-pipeline-'$CURRENT_DATE_TIME'",
          "key_type": "ingest",
          "permissions": {
            "create_datasets": true
           }
        },
        "relationships": {
          "environment": {
            "data": {
              "id": "'$environment_id'",
              "type": "environments"
            }
          }
        }
      }
    }' | jq -r '.data.id + .data.attributes.secret' )

    echo $API_KEY
}

echo "Internal telemetry API key: $INTERNAL_TELEMETRY_API_KEY"
echo "Customer telemetry API key: $CUSTOMER_TELEMETRY_API_KEY"

# create k8s secrets for the api keys
echo "Creating k8s secrets for the api keys"
kubectl create secret generic honeycomb-observability-pipeline \
  --from-literal=internal-api-key=$INTERNAL_TELEMETRY_API_KEY \
  --from-literal=pipeline-api-key=$CUSTOMER_TELEMETRY_API_KEY
