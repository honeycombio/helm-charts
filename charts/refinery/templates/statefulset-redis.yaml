{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "refinery.redis.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "refinery.redis.labels" . | nindent 4 }}
{{- with .Values.redis.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
{{- end }}
spec:
  replicas: 1
  serviceName: {{ include "refinery.redis.fullname" . }}
  {{- if .Values.redis.persistentVolumeClaimRetentionPolicy.enabled }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .Values.redis.persistentVolumeClaimRetentionPolicy.whenDeleted }}
    whenScaled: {{ .Values.redis.persistentVolumeClaimRetentionPolicy.whenScaled }}
  {{- end }}
  selector:
    matchLabels:
  {{- include "refinery.redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- /*
       .Values.podAnnotations is used here to maintain backwards compatibility.
       It should be removed eventually.
      */}}
      {{- if or .Values.podAnnotations .Values.redis.podAnnotations }}
      annotations:
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      labels:
    {{- include "refinery.redis.selectorLabels" . | nindent 8 }}
    {{- with .Values.redis.commonLabels}}
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.redis.podLabels}}
      {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "refinery.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          {{- with .Values.redis.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.redis.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ .Values.redis.persistentVolumeClaim.name }}
              mountPath: /data                
      {{- with .Values.redis.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: {{ .Values.redis.persistentVolumeClaim.name }}
      spec:
        accessModes:
          {{- toYaml .Values.redis.persistentVolumeClaim.accessModes | nindent 10}}
        resources:
          requests:
            storage: {{ .Values.redis.persistentVolumeClaim.storageSize }}
{{- end }}
